// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let blogPosts = [];

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const navToggle = document.querySelector('.nav-toggle');
const navMenu = document.querySelector('.nav-menu');
const blogGrid = document.getElementById('blog-grid');
const modal = document.getElementById('modal');
const modalBody = document.getElementById('modal-body');
const modalClose = document.querySelector('.modal-close');
const navLinks = document.querySelectorAll('.nav-link');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initializeNavigation();
    loadBlogPosts();
    initializeScrollEffects();
    initializeModal();
});

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
function initializeNavigation() {
    // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
    navToggle.addEventListener('click', function() {
        navMenu.classList.toggle('active');
        animateHamburger();
    });

    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href');
            const targetSection = document.querySelector(targetId);
            
            if (targetSection) {
                targetSection.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                
                // –ó–∞–∫—Ä—ã—Ç—å –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
                navMenu.classList.remove('active');
                resetHamburger();
            }
        });
    });
}

// –ê–Ω–∏–º–∞—Ü–∏—è –≥–∞–º–±—É—Ä–≥–µ—Ä-–º–µ–Ω—é
function animateHamburger() {
    const spans = navToggle.querySelectorAll('span');
    navToggle.classList.toggle('active');
    
    if (navToggle.classList.contains('active')) {
        spans[0].style.transform = 'rotate(45deg) translate(6px, 6px)';
        spans[1].style.opacity = '0';
        spans[2].style.transform = 'rotate(-45deg) translate(7px, -6px)';
    } else {
        resetHamburger();
    }
}

function resetHamburger() {
    const spans = navToggle.querySelectorAll('span');
    navToggle.classList.remove('active');
    spans[0].style.transform = 'none';
    spans[1].style.opacity = '1';
    spans[2].style.transform = 'none';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–µ–π –±–ª–æ–≥–∞
async function loadBlogPosts() {
    try {
        const response = await fetch('blog-data.json');
        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–≥–∞');
        }
        
        blogPosts = await response.json();
        renderBlogPosts();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        blogGrid.innerHTML = '<p style=\"text-align: center; color: #6b7280; grid-column: 1 / -1;\">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—å–∏ –±–ª–æ–≥–∞.</p>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π –±–ª–æ–≥–∞
function renderBlogPosts() {
    if (!blogPosts || blogPosts.length === 0) {
        blogGrid.innerHTML = '<p style=\"text-align: center; color: #6b7280; grid-column: 1 / -1;\">–°—Ç–∞—Ç—å–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.</p>';
        return;
    }

    blogGrid.innerHTML = '';
    
    blogPosts.forEach((post, index) => {
        const blogCard = createBlogCard(post, index);
        blogGrid.appendChild(blogCard);
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
    animateBlogCards();
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –±–ª–æ–≥–∞
function createBlogCard(post, index) {
    const card = document.createElement('div');
    card.className = 'blog-card';
    card.style.opacity = '0';
    card.style.transform = 'translateY(30px)';
    
    card.innerHTML = `
        <h3>${post.title}</h3>
        <div class="blog-meta">
            <span>üìÖ ${formatDate(post.date)}</span>
            <span>‚è±Ô∏è ${post.readTime} –º–∏–Ω —á—Ç–µ–Ω–∏—è</span>
            ${post.tags ? `<span>üè∑Ô∏è ${post.tags.join(', ')}</span>` : ''}
        </div>
        <p class="blog-excerpt">${post.excerpt}</p>
        <a href="#" class="read-more" data-post-id="${index}">
            –ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Üí
        </a>
    `;

    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    card.addEventListener('click', function(e) {
        if (e.target.classList.contains('read-more')) {
            e.preventDefault();
            openModal(post);
        }
    });

    return card;
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –±–ª–æ–≥–∞
function animateBlogCards() {
    const cards = document.querySelectorAll('.blog-card');
    
    cards.forEach((card, index) => {
        setTimeout(() => {
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, index * 100);
    });
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function initializeModal() {
    modalClose.addEventListener('click', closeModal);
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeModal();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && modal.style.display === 'block') {
            closeModal();
        }
    });
}

function openModal(post) {
    modalBody.innerHTML = `
        <h3>${post.title}</h3>
        <div class="blog-meta" style="margin-bottom: 2rem;">
            <span>üìÖ ${formatDate(post.date)}</span>
            <span>‚è±Ô∏è ${post.readTime} –º–∏–Ω —á—Ç–µ–Ω–∏—è</span>
            ${post.tags ? `<span>üè∑Ô∏è ${post.tags.join(', ')}</span>` : ''}
        </div>
        <div style="line-height: 1.8; color: #374151;">
            ${formatContent(post.content)}
        </div>
    `;
    
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
}

function closeModal() {
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
}

// –≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
function initializeScrollEffects() {
    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    window.addEventListener('scroll', function() {
        const header = document.querySelector('.header');
        const scrollY = window.scrollY;
        
        if (scrollY > 100) {
            header.style.background = 'rgba(255, 255, 255, 0.98)';
            header.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.1)';
        } else {
            header.style.background = 'rgba(255, 255, 255, 0.95)';
            header.style.boxShadow = 'none';
        }
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animation = 'fadeInUp 0.8s ease-out forwards';
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Å–µ–∫—Ü–∏—è–º–∏
    const sections = document.querySelectorAll('.section-title, .about-content');
    sections.forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(30px)';
        observer.observe(section);
    });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}

function formatContent(content) {
    // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ markdown-–ø–æ–¥–æ–±–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    return content
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        .replace(/\*(.*?)\*/g, '<em>$1</em>')
        .replace(/`(.*?)`/g, '<code style="background: #f3f4f6; padding: 2px 6px; border-radius: 4px; font-family: monospace;">$1</code>')
        .replace(/\n\n/g, '</p><p>')
        .replace(/\n/g, '<br>');
}

// –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è floating —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function animateFloatingElements() {
    const floatingElements = document.querySelectorAll('.floating-element');
    
    floatingElements.forEach((element, index) => {
        const randomDelay = Math.random() * 2000;
        const randomDuration = 4000 + Math.random() * 4000;
        
        setTimeout(() => {
            element.style.animation = `float ${randomDuration}ms ease-in-out infinite`;
        }, randomDelay);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫ –∫–Ω–æ–ø–∫–∞–º
document.addEventListener('DOMContentLoaded', function() {
    const buttons = document.querySelectorAll('.hero-button, .read-more');
    
    buttons.forEach(button => {
        button.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-2px)';
        });
        
        button.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
document.addEventListener('DOMContentLoaded', function() {
    animateFloatingElements();
});
